{
	"openapi": "3.0.3",
	"info": {
		"title": "GetPartna Api Documentation",
		"version": "3.0"
	},
	"paths": {
		"/": {
			"get": {
				"description": "home endpoint",
				"operationId": "home",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "Welcome to Partna api"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "ping pong"
					}
				},
				"security": [],
				"summary": "home",
				"tags": [
					"ping"
				]
			}
		},
		"/account": {
			"get": {
				"description": "Get account details",
				"operationId": "getAccount",
				"parameters": [
					{
						"example": "john_joe",
						"in": "query",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"data": {
											"btcAddress": "tb1q6zdd464wxlmd9glqefeeqsuxnemcyq73rhzn77",
											"ethAddress": "0x20B3bE3a0629f30512E8bf6CcaCC1f2FC403b6AC",
											"reference": "john_joe",
											"trxAddress": "TCx7wxwFVm9GwnEaKaNckzqRYxrUxgoJDD"
										},
										"message": "success"
									},
									"properties": {
										"data": {
											"properties": {
												"btcAddress": {
													"type": "string"
												},
												"ethAddress": {
													"type": "string"
												},
												"reference": {
													"type": "string"
												},
												"trxAddress": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "get account"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "error: cannot get account by ref"
									},
									"properties": {
										"message": {
											"enum": [
												"error",
												" cannot get account by ref"
											],
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "bad request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "invalid apikey"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "unauthorized access"
					}
				},
				"security": [
					{
						"x-api-key": [],
                        "x-api-user": []
					}
				],
				"summary": "Get account",
				"tags": [
					"account"
				]
			}
		},
		"/account/": {
			"post": {
				"description": "Create an account (Crypto or Fiat)",
				"operationId": "createAccount",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"reference": "john_joe",
									"type": "crypto"
								},
								"properties": {
									"reference": {
										"type": "string"
									},
									"type": {
										"enum": [
											"crypto",
											"dollar",
											"naira"
										],
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "success"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "create account"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"data": "Field [Type] Expected[oneof(dollar crypto naira)] Value [invalid value]",
										"message": "validation error"
									},
									"properties": {
										"data": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "create account failed"
					}
				},
				"security": [
					{
						"x-api-key": [],
                        "x-api-user": []
					}
				],
				"summary": "Create account",
				"tags": [
					"account"
				]
			}
		},
		"/panic": {
			"get": {
				"description": "panic endpoint",
				"operationId": "panic",
				"responses": {
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "Internal Server Error"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "ping panic"
					}
				},
				"security": [],
				"summary": "panic",
				"tags": [
					"ping"
				]
			}
		},
		"/ping": {
			"get": {
				"description": "ping endpoint",
				"operationId": "ping",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"data": {
											"version": "v3"
										},
										"message": "success"
									},
									"properties": {
										"data": {
											"properties": {
												"version": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "ping pong"
					}
				},
				"security": [],
				"summary": "ping",
				"tags": [
					"ping"
				]
			}
		},
		"/transfer": {
			"post": {
				"description": "Transfer funds to an account (Crypto wallet, Bank, ETC)",
				"operationId": "transfer",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"amount": 7,
									"currency": "USD",
									"fromAccount": "user1",
									"toAccount": "account1"
								},
								"properties": {
									"amount": {
										"type": "number"
									},
									"currency": {
										"type": "string"
									},
									"fromAccount": {
										"type": "string"
									},
									"toAccount": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "success"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "transfer successful"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "error: invalid account"
									},
									"properties": {
										"message": {
											"enum": [
												"error",
												" invalid account"
											],
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "invalid account"
					},
					"403": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "insufficient funds"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "insufficient funds"
					}
				},
				"security": [
					{
						"x-api-key": [],
                        "x-api-user": []
					}
				],
				"summary": "Transfer from one account to another",
				"tags": [
					"transfer"
				]
			}
		},
		"/transfer/withdraw": {
			"post": {
				"description": "Withdraw funds",
				"operationId": "withdraw",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"address": "0xA0b86991c6218b36c1d19D4a2e9eb0cE3606eB48",
									"amount": 2,
									"currency": "USDC",
									"reference": "reference1",
									"fromAccount": "user1",
									"network": "ethereum",
									"type": "crypto"
								},
								"properties": {
									"address": {
										"type": "string"
									},
									"amount": {
										"type": "number"
									},
									"currency": {
										"enum": [
											"BNB",
											"BTC",
											"ETH",
											"USDC",
											"USDT",
											"CUSD"
										],
										"type": "string"
									},
									"reference": {
										"type": "string"
									},
									"fromAccount": {
										"type": "string"
									},
									"network": {
										"enum": [
											"avalanche",
											"binance",
											"bitcoin",
											"celo",
											"ethereum",
											"polygon",
											"tron"
										],
										"type": "string"
									},
									"type": {
										"enum": [
											"crypto",
											"fiat"
										],
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "request completed"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "withdrawal request successfully submitted"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"message": "wrong network address"
									},
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "invalid address"
					}
				},
				"security": [
					{
						"x-api-key": [],
                        "x-api-user": []
					}
				],
				"summary": "Withdraw funds",
				"tags": [
					"transfer"
				]
			}
		},
		"/transfer/": {
			"get": {
				"description": "Get transactions",
				"operationId": "Transactions",
				"parameters": [
					{
						"example": "user",
						"in": "query",
						"name": "accountname",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"example": "2",
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"example": "reference1",
						"in": "query",
						"name": "transactionRef",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"data": {
											"ETH": [
												{
													"Amount": 4,
													"CreditAccount": "account1",
													"CreditUser": "user3",
													"Currency": "ETH",
													"DebitAccount": "user3",
													"DebitUser": "user3",
													"Reference": "abcdef1234567890abcdef1234567867",
													"Status": "completed",
													"Timestamp": "",
													"TransactionType": "Internal Transfer"
												},
												{
													"Amount": 10,
													"CreditAccount": "user3",
													"CreditUser": "user3",
													"Currency": "ETH",
													"DebitAccount": "credit",
													"DebitUser": "admin",
													"Reference": "abcdef1234567890abcdef1234567654",
													"Status": "completed",
													"Timestamp": "",
													"TransactionType": "Admin Credit"
												}
											]
										},
										"message": "request completed"
									},
									"properties": {
										"data": {
											"properties": {
												"ETH": {
													"type": "array"
												}
											},
											"type": "object"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						},
						"description": "get transactions request successful"
					}
				},
				"security": [
					{
						"x-api-key": [],
						"x-api-user": []
					}
				],
				"summary": "Get transactions",
				"tags": [
					"transfer"
				]
			}
		}
	},
	"servers": [
		{
			"url": "https://staging-partna-api.getpartna.com/"
		}
	],
	"components": {
		"schemas": {
			"BaseResponse": {
				"properties": {
					"data": {
						"type": "object"
					},
					"message": {
						"type": "string"
					}
				},
				"type": "object"
			}
		},
		"securitySchemes": {
			"x-api-key": {
				"in": "header",
				"name": "x-api-key",
				"type": "apiKey"
			},
			"x-api-user": {
				"in": "header",
				"name": "x-api-user",
				"type": "apiKey"
			}
		}
	},
	"security": [
		{
			"x-api-key": []
		},
		{
			"x-api-user": []
		}
	],
	"tags": [
		{
			"description": "pinger",
			"name": "ping"
		},
		{
			"description": "account endpoints",
			"name": "account"
		}
	]
}